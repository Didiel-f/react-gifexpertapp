{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","setImages","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,0BAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACzCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAMC,EAAUC,GAAhB,uBAAAC,EAAA,4DAEP,uCACNC,EAHa,UAEP,uCAFO,cAGMC,UAAWJ,GAHjB,+DAIAK,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,wDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAKA,EAAL,OCHCO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAfAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAECC,QAAQC,IAAIF,GAEZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAAErB,IAEEsB,EDnByBO,CAAc7B,GAAjCc,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,0CAAd,IAAyDjB,EAAzD,KAECqB,GAAW,uBAAGJ,UAAU,yCAAb,aAEV,yBAAKA,UAAU,aACZH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UE4BboB,EAzCM,WAAO,IAAD,EAGW7C,mBAAS,CAAC,UAHrB,mBAGlB8C,EAHkB,KAGN/C,EAHM,KASzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI+C,EAAWtB,KAAK,SAAAV,GAAQ,OACtB,kBAAC,EAAD,CACE8B,IAAK9B,EACLA,SAAUA,UCpBxBiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.d96234a0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories( (cats) => [inputValue, ...cats]);\r\n            setInputValue('');\r\n                        \r\n        }\r\n    }\r\n\r\n    return (\r\n    \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category, setImages) => {\r\n\r\n    const api = 'https://api.giphy.com/v1/gifs/search';\r\n    const url = `${api}?q=${ encodeURI( category )     }&limit=10&api_key=l5PGoarUxegMQ9SFbH9M5BoUZgmZWbd9`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    //setImages(gifs);\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n        \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className='card animate__animated animate__fadeIn'> {category} </h3>\r\n\r\n            {loading && <p className='card animate__animated animate__flash'> Loading </p>}\r\n\r\n            { <div className='card-grid'>\r\n                {images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img} \r\n                        />\r\n                ))}\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });             \r\n                      \r\n            } )\r\n    }, [ category ]);\r\n\r\n    return state; // {data: [], loading: true}\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n  const [categories, setCategories] = useState(['Hello']);\r\n\r\n/*   const handleAdd = () => {\r\n    setCategories( [ ...categories, 'Didiel'] );\r\n  } */\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />     \r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n              key={category}\r\n              category={category} \r\n            />\r\n            ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//GifExpertApp.propTypes = {}\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}